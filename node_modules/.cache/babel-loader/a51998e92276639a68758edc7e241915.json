{"ast":null,"code":"var _jsxFileName = \"/Users/asadali/WebstormProjects/appnotes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [notes, setNotes] = React.useState([]);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(5),\n      body: \" add title on here\"\n    };\n    setNotes(prevState => [newNote, ...prevState]); // give the  unique id to the currentNodeId\n\n    setCurrentNoteId(newNote.id);\n  }\n\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n\n  function updateNote(text) {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId ? { ...oldNote,\n        body: text\n      } : oldNote;\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Split, {\n        sizes: [30, 70],\n        direction: \"horizontal\",\n        className: \"split\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          notes: notes,\n          currentNote: findCurrentNote(),\n          newNote: createNewNote,\n          setCurrentNoteId: setCurrentNoteId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 6\n  }, this);\n}\n\n_s(App, \"L0uws1tUqCE6iZzA8F/ZLDqRDYA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Sidebar","Editor","Split","nanoid","App","notes","setNotes","useState","currentNoteId","setCurrentNoteId","id","createNewNote","newNote","body","prevState","findCurrentNote","find","note","updateNote","text","oldNotes","map","oldNote","length"],"sources":["/Users/asadali/WebstormProjects/appnotes/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Sidebar from \"./components/Sidebar\"\nimport Editor from \"./components/Editor\"\nimport Split from \"react-split\"\nimport {nanoid} from \"nanoid\"\n\nexport default function App() {\n\n    const [notes,setNotes] = React.useState([])\n\n    const [currentNoteId,setCurrentNoteId] = React.useState(\n        (notes[0] && notes[0].id)  || \"\"\n    )\n\n\n    function createNewNote() {\n        const newNote = {\n            id:nanoid(5),\n            body: \" add title on here\"\n        }\n        setNotes(prevState => [newNote, ...prevState])\n\n        // give the  unique id to the currentNodeId\n        setCurrentNoteId(newNote.id)\n    }\n\n    function findCurrentNote() {\n        return notes.find(note => {\n            return note.id === currentNoteId\n        }) || notes[0]\n    }\n    function updateNote(text) {\n        setNotes(oldNotes => oldNotes.map(oldNote => {\n            return oldNote.id === currentNoteId\n                ? { ...oldNote, body: text }\n                : oldNote\n        }))\n    }\n  return (\n     <main>\n         {\n             notes.length > 0\n             ?\n               <>\n                 <Split\n                     sizes={[30, 70]}\n                     direction=\"horizontal\"\n                     className=\"split\"\n                 >\n                     <Sidebar\n                         notes={notes}\n                         currentNote = {findCurrentNote()}\n                         newNote={createNewNote}\n                         setCurrentNoteId={setCurrentNoteId}\n\n\n                     />\n                     <Editor/>\n                 </Split>\n                </>\n\n              :\n                 <div className=\"no-notes\">\n                     <h1>You have no notes</h1>\n                     <button  className=\"first-note\"\n                              onClick={createNewNote}>\n                         Create one now</button>\n\n                 </div>\n\n\n\n\n\n         }\n     </main>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE1B,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAzB;EAEA,MAAM,CAACC,aAAD,EAAeC,gBAAf,IAAmCV,KAAK,CAACQ,QAAN,CACpCF,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASK,EAAtB,IAA8B,EADO,CAAzC;;EAKA,SAASC,aAAT,GAAyB;IACrB,MAAMC,OAAO,GAAG;MACZF,EAAE,EAACP,MAAM,CAAC,CAAD,CADG;MAEZU,IAAI,EAAE;IAFM,CAAhB;IAIAP,QAAQ,CAACQ,SAAS,IAAI,CAACF,OAAD,EAAU,GAAGE,SAAb,CAAd,CAAR,CALqB,CAOrB;;IACAL,gBAAgB,CAACG,OAAO,CAACF,EAAT,CAAhB;EACH;;EAED,SAASK,eAAT,GAA2B;IACvB,OAAOV,KAAK,CAACW,IAAN,CAAWC,IAAI,IAAI;MACtB,OAAOA,IAAI,CAACP,EAAL,KAAYF,aAAnB;IACH,CAFM,KAEDH,KAAK,CAAC,CAAD,CAFX;EAGH;;EACD,SAASa,UAAT,CAAoBC,IAApB,EAA0B;IACtBb,QAAQ,CAACc,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAAI;MACzC,OAAOA,OAAO,CAACZ,EAAR,KAAeF,aAAf,GACD,EAAE,GAAGc,OAAL;QAAcT,IAAI,EAAEM;MAApB,CADC,GAEDG,OAFN;IAGH,CAJoB,CAAb,CAAR;EAKH;;EACH,oBACG;IAAA,UAEQjB,KAAK,CAACkB,MAAN,GAAe,CAAf,gBAEE;MAAA,uBACE,QAAC,KAAD;QACI,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,CADX;QAEI,SAAS,EAAC,YAFd;QAGI,SAAS,EAAC,OAHd;QAAA,wBAKI,QAAC,OAAD;UACI,KAAK,EAAElB,KADX;UAEI,WAAW,EAAIU,eAAe,EAFlC;UAGI,OAAO,EAAEJ,aAHb;UAII,gBAAgB,EAAEF;QAJtB;UAAA;UAAA;UAAA;QAAA,QALJ,eAaI,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QAbJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBAFF,gBAqBI;MAAK,SAAS,EAAC,UAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAS,SAAS,EAAC,YAAnB;QACS,OAAO,EAAEE,aADlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAvBZ;IAAA;IAAA;IAAA;EAAA,QADH;AAuCD;;GAvEuBP,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/asadali/WebstormProjects/appnotes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [notes, setNotes] = React.useState([]);\n  console.log(setNotes());\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n  console.log(setCurrentNoteId());\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n\n  function updateNote(text) {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId ? { ...oldNote,\n        body: text\n      } : oldNote;\n    }));\n  }\n\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"VGu8DdM6YvxodcgSUp6Lv3WpjOU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Sidebar","Editor","data","Split","nanoid","App","notes","setNotes","useState","console","log","currentNoteId","setCurrentNoteId","id","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","map","oldNote","findCurrentNote","find","note","length"],"sources":["/Users/asadali/WebstormProjects/appnotes/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Sidebar from \"./components/Sidebar\"\nimport Editor from \"./components/Editor\"\nimport { data } from \"./data\"\nimport Split from \"react-split\"\nimport {nanoid} from \"nanoid\"\n\nexport default function App() {\n  const [notes, setNotes] = React.useState([])\n   console.log(setNotes())\n\n  const [currentNoteId, setCurrentNoteId] = React.useState(\n      (notes[0] && notes[0].id) || \"\"\n  )\n  console.log(setCurrentNoteId())\n\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    }\n    setNotes(prevNotes => [newNote, ...prevNotes])\n    setCurrentNoteId(newNote.id)\n  }\n\n  function updateNote(text) {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId\n          ? { ...oldNote, body: text }\n          : oldNote\n    }))\n  }\n\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId\n    }) || notes[0]\n  }\n\n  return (\n      <main>\n        {\n          notes.length > 0\n              ?\n              <Split\n                  sizes={[30, 70]}\n                  direction=\"horizontal\"\n                  className=\"split\"\n              >\n                <Sidebar\n                    notes={notes}\n                    currentNote={findCurrentNote()}\n                    setCurrentNoteId={setCurrentNoteId}\n                    newNote={createNewNote}\n\n\n                />\n                {\n                    currentNoteId &&\n                    notes.length > 0 &&\n                    <Editor\n                        currentNote={findCurrentNote()}\n                        updateNote={updateNote}\n                    />\n                }\n              </Split>\n              :\n              <div className=\"no-notes\">\n                <h1>You have no notes</h1>\n                <button\n                    className=\"first-note\"\n                    onClick={createNewNote}\n                >\n                  Create one now\n                </button>\n              </div>\n\n        }\n      </main>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;EACCC,OAAO,CAACC,GAAR,CAAYH,QAAQ,EAApB;EAED,MAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCb,KAAK,CAACS,QAAN,CACrCF,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASO,EAAtB,IAA6B,EADS,CAA1C;EAGAJ,OAAO,CAACC,GAAR,CAAYE,gBAAgB,EAA5B;;EAGA,SAASE,aAAT,GAAyB;IACvB,MAAMC,OAAO,GAAG;MACdF,EAAE,EAAET,MAAM,EADI;MAEdY,IAAI,EAAE;IAFQ,CAAhB;IAIAT,QAAQ,CAACU,SAAS,IAAI,CAACF,OAAD,EAAU,GAAGE,SAAb,CAAd,CAAR;IACAL,gBAAgB,CAACG,OAAO,CAACF,EAAT,CAAhB;EACD;;EAED,SAASK,UAAT,CAAoBC,IAApB,EAA0B;IACxBZ,QAAQ,CAACa,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAAI;MAC3C,OAAOA,OAAO,CAACT,EAAR,KAAeF,aAAf,GACD,EAAE,GAAGW,OAAL;QAAcN,IAAI,EAAEG;MAApB,CADC,GAEDG,OAFN;IAGD,CAJoB,CAAb,CAAR;EAKD;;EAED,SAASC,eAAT,GAA2B;IACzB,OAAOjB,KAAK,CAACkB,IAAN,CAAWC,IAAI,IAAI;MACxB,OAAOA,IAAI,CAACZ,EAAL,KAAYF,aAAnB;IACD,CAFM,KAEDL,KAAK,CAAC,CAAD,CAFX;EAGD;;EAED,oBACI;IAAA,UAEIA,KAAK,CAACoB,MAAN,GAAe,CAAf,gBAEI,QAAC,KAAD;MACI,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,CADX;MAEI,SAAS,EAAC,YAFd;MAGI,SAAS,EAAC,OAHd;MAAA,wBAKE,QAAC,OAAD;QACI,KAAK,EAAEpB,KADX;QAEI,WAAW,EAAEiB,eAAe,EAFhC;QAGI,gBAAgB,EAAEX,gBAHtB;QAII,OAAO,EAAEE;MAJb;QAAA;QAAA;QAAA;MAAA,QALF,EAcMH,aAAa,IACbL,KAAK,CAACoB,MAAN,GAAe,CADf,iBAEA,QAAC,MAAD;QACI,WAAW,EAAEH,eAAe,EADhC;QAEI,UAAU,EAAEL;MAFhB;QAAA;QAAA;QAAA;MAAA,QAhBN;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,gBAyBI;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACI,SAAS,EAAC,YADd;QAEI,OAAO,EAAEJ,aAFb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EA3BR;IAAA;IAAA;IAAA;EAAA,QADJ;AAyCD;;GA1EuBT,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}
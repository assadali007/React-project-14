{"ast":null,"code":"var _jsxFileName = \"/Users/asadali/WebstormProjects/appnotes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  /**\n   * Challenge:\n   * 1. Every time the `notes` array changes, save it\n   *    in localStorage. You'll need to use JSON.stringify()\n   *    to turn the array into a string to save in localStorage.\n   * 2. When the app first loads, initialize the notes state\n   *    with the notes saved in localStorage. You'll need to\n   *    use JSON.parse() to turn the stringified array back\n   *    into a real JS array.\n   */\n  const [notes, setNotes] = React.useState(JSON.parse(\"key\") || []);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => localStorage.setItem(\"key\", JSON.stringify([newNote, ...prevNotes])));\n    setCurrentNoteId(newNote.id);\n  }\n\n  function updateNote(text) {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId ? { ...oldNote,\n        body: text\n      } : oldNote;\n    }));\n  }\n\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"FWMbpUumLWPb3a00UT3tNrIjJN0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Sidebar","Editor","data","Split","nanoid","App","notes","setNotes","useState","JSON","parse","currentNoteId","setCurrentNoteId","id","createNewNote","newNote","body","prevNotes","localStorage","setItem","stringify","updateNote","text","oldNotes","map","oldNote","findCurrentNote","find","note","length"],"sources":["/Users/asadali/WebstormProjects/appnotes/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Sidebar from \"./components/Sidebar\"\nimport Editor from \"./components/Editor\"\nimport { data } from \"./data\"\nimport Split from \"react-split\"\nimport {nanoid} from \"nanoid\"\n\nexport default function App() {\n\n    /**\n     * Challenge:\n     * 1. Every time the `notes` array changes, save it\n     *    in localStorage. You'll need to use JSON.stringify()\n     *    to turn the array into a string to save in localStorage.\n     * 2. When the app first loads, initialize the notes state\n     *    with the notes saved in localStorage. You'll need to\n     *    use JSON.parse() to turn the stringified array back\n     *    into a real JS array.\n     */\n\n\n    const [notes, setNotes] = React.useState( JSON.parse(\"key\") || [])\n\n\n    const [currentNoteId, setCurrentNoteId] = React.useState(\n        (notes[0] && notes[0].id) || \"\"\n    )\n\n    function createNewNote() {\n        const newNote = {\n            id: nanoid(),\n            body: \"# Type your markdown note's title here\"\n        }\n        setNotes(prevNotes => localStorage.setItem(\"key\",JSON.stringify([newNote, ...prevNotes])))\n\n        setCurrentNoteId(newNote.id)\n    }\n\n    function updateNote(text) {\n        setNotes(oldNotes => oldNotes.map(oldNote => {\n            return oldNote.id === currentNoteId\n                ? { ...oldNote, body: text }\n                : oldNote\n        }))\n    }\n\n    function findCurrentNote() {\n        return notes.find(note => {\n            return note.id === currentNoteId\n        }) || notes[0]\n    }\n\n    return (\n        <main>\n            {\n                notes.length > 0\n                    ?\n                    <Split\n                        sizes={[30, 70]}\n                        direction=\"horizontal\"\n                        className=\"split\"\n                    >\n                        <Sidebar\n                            notes={notes}\n                            currentNote={findCurrentNote()}\n                            setCurrentNoteId={setCurrentNoteId}\n                            newNote={createNewNote}\n                        />\n                        {\n                            currentNoteId &&\n                            notes.length > 0 &&\n                            <Editor\n                                currentNote={findCurrentNote()}\n                                updateNote={updateNote}\n                            />\n                        }\n                    </Split>\n                    :\n                    <div className=\"no-notes\">\n                        <h1>You have no notes</h1>\n                        <button\n                            className=\"first-note\"\n                            onClick={createNewNote}\n                        >\n                            Create one now\n                        </button>\n                    </div>\n\n            }\n        </main>\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGI,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAgBC,IAAI,CAACC,KAAL,CAAW,KAAX,KAAqB,EAArC,CAA1B;EAGA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,KAAK,CAACS,QAAN,CACrCF,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASO,EAAtB,IAA6B,EADS,CAA1C;;EAIA,SAASC,aAAT,GAAyB;IACrB,MAAMC,OAAO,GAAG;MACZF,EAAE,EAAET,MAAM,EADE;MAEZY,IAAI,EAAE;IAFM,CAAhB;IAIAT,QAAQ,CAACU,SAAS,IAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA2BV,IAAI,CAACW,SAAL,CAAe,CAACL,OAAD,EAAU,GAAGE,SAAb,CAAf,CAA3B,CAAd,CAAR;IAEAL,gBAAgB,CAACG,OAAO,CAACF,EAAT,CAAhB;EACH;;EAED,SAASQ,UAAT,CAAoBC,IAApB,EAA0B;IACtBf,QAAQ,CAACgB,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAAI;MACzC,OAAOA,OAAO,CAACZ,EAAR,KAAeF,aAAf,GACD,EAAE,GAAGc,OAAL;QAAcT,IAAI,EAAEM;MAApB,CADC,GAEDG,OAFN;IAGH,CAJoB,CAAb,CAAR;EAKH;;EAED,SAASC,eAAT,GAA2B;IACvB,OAAOpB,KAAK,CAACqB,IAAN,CAAWC,IAAI,IAAI;MACtB,OAAOA,IAAI,CAACf,EAAL,KAAYF,aAAnB;IACH,CAFM,KAEDL,KAAK,CAAC,CAAD,CAFX;EAGH;;EAED,oBACI;IAAA,UAEQA,KAAK,CAACuB,MAAN,GAAe,CAAf,gBAEI,QAAC,KAAD;MACI,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,CADX;MAEI,SAAS,EAAC,YAFd;MAGI,SAAS,EAAC,OAHd;MAAA,wBAKI,QAAC,OAAD;QACI,KAAK,EAAEvB,KADX;QAEI,WAAW,EAAEoB,eAAe,EAFhC;QAGI,gBAAgB,EAAEd,gBAHtB;QAII,OAAO,EAAEE;MAJb;QAAA;QAAA;QAAA;MAAA,QALJ,EAYQH,aAAa,IACbL,KAAK,CAACuB,MAAN,GAAe,CADf,iBAEA,QAAC,MAAD;QACI,WAAW,EAAEH,eAAe,EADhC;QAEI,UAAU,EAAEL;MAFhB;QAAA;QAAA;QAAA;MAAA,QAdR;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,gBAuBI;MAAK,SAAS,EAAC,UAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QACI,SAAS,EAAC,YADd;QAEI,OAAO,EAAEP,aAFb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAzBZ;IAAA;IAAA;IAAA;EAAA,QADJ;AAuCH;;GApFuBT,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}